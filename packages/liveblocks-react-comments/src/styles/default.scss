@use "sass:math";

/**
 * Generates a scale of foreground colors based on the --lb-foreground-contrast
 * variable, which indicates the lowest percentage of the scale.
 *
 * ╔═══════════════════╗                        ╔═══════════════════╗
 * ║  --lb-background  ║                        ║  --lb-foreground  ║
 * ╚═══════════════════╝                        ╚═══════════════════╝
 *
 *        0% ●────────────────────────────────────────────● 100%
 *           ● ─ ─ ─ ─●───┬───┬───┬───┬───┬───┬───┬───┬───●
 *   ┌────────────────┴───┴───┴───┴───┤   │   │   │   │
 *   │ --lb-foreground-contrast = 15% │   │   │   │   │
 *   └────────────────┬───┬───┬───┬───┤   │   │   │   │
 *                    ◇   ◇   ◇   ◇   ◇   ◇   ◇   ◇   ◇
 *                   100 200 300 400 500 600 700 800 900
 *
 *        0% ●────────────────────────────────────────────● 100%
 *           ● ─ ─ ─ ─ ─ ─ ─ ─ ●──┬──┬──┬──┬──┬──┬──┬──┬──●
 *              ┌──────────────┴──┴──┴──┴──┴──┴──┤  │  │
 *              │ --lb-foreground-contrast = 40% │  │  │
 *              └──────────────┬──┬──┬──┬──┬──┬──┤  │  │
 *                             ◇  ◇  ◇  ◇  ◇  ◇  ◇  ◇  ◇
*/
@function generate-foreground($from-color, $to-color, $increment) {
  $index: math.div($increment, 100);
  $percentage: calc(
    100% -
      (
        var(--lb-foreground-contrast) + #{math.max($index - 1, 0)} * ((
                100% - var(--lb-foreground-contrast)
              ) / 9)
      )
  );

  @return color-mix(in srgb, #{$to-color}, #{$from-color} #{$percentage});
}

$lb-button-size: calc(2 * 0.25 * var(--lb-spacing) + var(--lb-icon-size));

:root {
  /* @public Basic */
  --lb-accent: #08f;
  --lb-accent-foreground: #fff;
  --lb-background: #fff;
  --lb-foreground: #111;
  --lb-tooltip-background: #222;
  --lb-tooltip-foreground: #fff;
  --lb-radius: 0.5em;
  --lb-spacing: 1rem;

  /* @public Advanced */
  --lb-icon-weight: 1.5px;
  --lb-icon-size: 1.25rem;
  --lb-avatar-radius: 50%;
  --lb-button-radius: calc(0.75 * var(--lb-radius));
  --lb-transition-duration: 0.1s;
  --lb-transition-easing: cubic-bezier(0.4, 0, 0.2, 1);
  --lb-foreground-contrast: 6%;

  /* @public Modern CSS (color-mix) */
  // TODO: Use contrast variable to control these like the foreground ones?
  --lb-accent-emphasis: color-mix(
    in srgb,
    var(--lb-accent),
    var(--lb-background) 20%
  );
  --lb-accent-subtle: color-mix(
    in srgb,
    var(--lb-accent),
    var(--lb-background) 80%
  );
  --lb-accent-subtlest: color-mix(
    in srgb,
    var(--lb-accent),
    var(--lb-background) 90%
  );
  --lb-tooltip-foreground-100: #{generate-foreground(
      var(--lb-tooltip-background),
      var(--lb-tooltip-foreground),
      100
    )};
  --lb-tooltip-foreground-400: #{generate-foreground(
      var(--lb-tooltip-background),
      var(--lb-tooltip-foreground),
      400
    )};

  // TODO: Use "semantic" names to remove the unused ones?
  --lb-foreground-100: #{generate-foreground(
      var(--lb-background),
      var(--lb-foreground),
      100
    )};
  --lb-foreground-200: #{generate-foreground(
      var(--lb-background),
      var(--lb-foreground),
      200
    )};
  --lb-foreground-300: #{generate-foreground(
      var(--lb-background),
      var(--lb-foreground),
      300
    )};
  --lb-foreground-400: #{generate-foreground(
      var(--lb-background),
      var(--lb-foreground),
      400
    )};
  --lb-foreground-500: #{generate-foreground(
      var(--lb-background),
      var(--lb-foreground),
      500
    )};
  --lb-foreground-600: #{generate-foreground(
      var(--lb-background),
      var(--lb-foreground),
      600
    )};
  --lb-foreground-700: #{generate-foreground(
      var(--lb-background),
      var(--lb-foreground),
      700
    )};
  --lb-foreground-800: #{generate-foreground(
      var(--lb-background),
      var(--lb-foreground),
      800
    )};
  --lb-foreground-900: #{generate-foreground(
      var(--lb-background),
      var(--lb-foreground),
      900
    )};

  *,
  ::before,
  ::after {
    box-sizing: border-box;
  }
}

/**
 * Icon
 */

.lb-icon {
  /* @public */
  --lb-icon-background: var(--lb-background);

  width: var(--lb-icon-size);
  height: var(--lb-icon-size);
  stroke-width: var(--lb-icon-weight);
}

/**
 * Button
 */

.lb-button {
  /* @internal */
  --lb-button-background: var(--lb-background);

  all: unset;
  display: flex;
  justify-content: center;
  align-items: center;
  aspect-ratio: 1;
  padding: calc(0.25 * var(--lb-spacing));
  border-radius: var(--lb-button-radius);
  background: var(--lb-button-background);
  color: var(--lb-foreground-400);
  outline: none;
  cursor: pointer;
  transition-timing-function: var(--lb-transition-easing);
  transition-duration: var(--lb-transition-duration);
  transition-property: background, color, box-shadow, opacity;

  &:focus-visible {
    box-shadow:
      var(--lb-background) 0 0 0 2px,
      var(--lb-accent) 0 0 0 4px;
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  &:enabled:hover,
  &:enabled:focus-visible {
    /* @internal */
    --lb-button-background: var(--lb-foreground-100);

    color: var(--lb-foreground-600);
  }
}

.lb-button.lb-button\:primary {
  /* @internal */
  --lb-button-background: var(--lb-accent);

  color: var(--lb-accent-foreground);

  &:enabled:hover,
  &:enabled:focus-visible {
    /* @internal */
    --lb-button-background: var(--lb-accent-emphasis);

    color: var(--lb-accent-foreground);
  }
}

.lb-button-icon {
  /* @public */
  --lb-icon-background: var(--lb-button-background);
}

/**
 * Floating
 */

.lb-dropdown,
.lb-composer-suggestions {
  border-radius: var(--lb-radius);
  background: var(--lb-background);
  box-shadow:
    0 0 0 1px rgb(0 0 0 / 4%),
    0 2px 6px rgb(0 0 0 / 8%),
    0 8px 26px rgb(0 0 0 / 12%);
  animation-duration: var(--lb-transition-duration);
  animation-timing-function: var(--lb-transition-easing);
  will-change: transform, opacity;

  &[data-side="top"] {
    animation-name: lb-animation-slide\:from-top;
  }

  &[data-side="bottom"] {
    animation-name: lb-animation-slide\:from-bottom;
  }
}

.lb-dropdown-item,
.lb-composer-suggestions-list-item {
  display: flex;
  align-items: center;
  padding: calc(0.25 * var(--lb-spacing)) calc(0.5 * var(--lb-spacing));
  color: var(--lb-foreground-800);
  outline: none;
  font-size: 0.875rem;
  cursor: pointer;
  transition-timing-function: var(--lb-transition-easing);
  transition-duration: var(--lb-transition-duration);
  transition-property: background, color, opacity;
}

/**
 * Dropdown
 */

.lb-dropdown {
  /* @public */
  --lb-dropdown-padding: 4px;

  padding: var(--lb-dropdown-padding);
}

.lb-dropdown-item {
  border-radius: calc(var(--lb-radius) - 0.5 * var(--lb-dropdown-padding));

  &[data-highlighted] {
    background: var(--lb-foreground-100);
  }
}

.lb-dropdown-item-icon {
  margin-inline-start: calc(-0.125 * var(--lb-spacing));
  margin-inline-end: calc(0.375 * var(--lb-spacing));
}

/**
 * Composer suggestions
 */

.lb-composer-suggestions {
  /* @public */
  --lb-composer-suggestions-padding: 4px;

  padding: var(--lb-composer-suggestions-padding);
}

.lb-composer-suggestions-list {
  margin: 0;
  padding: 0;
  list-style: none;
}

.lb-composer-suggestions-list-item {
  border-radius: calc(
    var(--lb-radius) - 0.5 * var(--lb-composer-suggestions-padding)
  );

  &[data-selected] {
    background: var(--lb-foreground-100);
  }
}

/**
 * Composer mention suggestions
 */

.lb-composer-mention-suggestions {
  /* @public */
  --lb-composer-mention-suggestion-avatar-size: 1.25rem;
}

.lb-composer-mention-suggestion {
  padding: calc(0.375 * var(--lb-spacing)) calc(0.625 * var(--lb-spacing));
}

.lb-composer-mention-suggestion-avatar {
  width: var(--lb-composer-mention-suggestion-avatar-size);
  margin-inline-start: calc(-0.125 * var(--lb-spacing));
  margin-inline-end: calc(0.375 * var(--lb-spacing));
}

/**
 * Tooltip
 */

.lb-tooltip {
  display: flex;
  line-height: 1;
  align-items: center;
  padding: 0 calc(0.5 * var(--lb-spacing));
  height: calc(1em + 0.875 * var(--lb-spacing));
  border-radius: var(--lb-radius);
  background: var(--lb-tooltip-background);
  color: var(--lb-tooltip-foreground);
  box-shadow:
    0 2px 4px rgb(0 0 0 / 8%),
    0 4px 12px rgb(0 0 0 / 12%);
  font-size: 0.75rem;
  pointer-events: none;
}

.lb-tooltip-shortcut {
  display: flex;
  gap: calc(0.25 * var(--lb-spacing));
  margin-inline-start: calc(0.375 * var(--lb-spacing));
  margin-inline-end: calc(-0.25 * var(--lb-spacing));

  kbd {
    display: flex;
    justify-content: center;
    align-items: center;
    aspect-ratio: 1;
    width: 1.5em;
    border-radius: calc(0.625 * var(--lb-radius));
    background: var(--lb-tooltip-foreground-100);
    color: var(--lb-tooltip-foreground-400);
    text-transform: uppercase;
  }
}

/**
 * Avatar
 */

.lb-avatar {
  position: relative;
  container-type: inline-size;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  aspect-ratio: 1;
  border-radius: var(--lb-avatar-radius);
  background: var(--lb-foreground-100);
}

.lb-avatar-image {
  position: absolute;
  top: 0;
  left: 0;
  object-fit: cover;
  width: 100%;
  height: 100%;
}

.lb-avatar-fallback {
  color: var(--lb-foreground-500);
  font-weight: 500;
  font-size: 35cqw;
  white-space: nowrap;
}

/**
 * Body 
 */

.lb-comment-body,
.lb-composer-editor {
  color: var(--lb-foreground-800);

  & p {
    margin-block-start: 0.25em;
    margin-block-end: 0.25em;

    &:first-of-type {
      margin-block-start: 0;
    }

    &:last-of-type {
      margin-block-end: 0;
    }
  }

  & code {
    padding: 0.2em 0.4em;
    border-radius: calc(0.75 * var(--lb-radius));
    background: var(--lb-foreground-100);
    color: var(--lb-foreground-600);
    box-decoration-break: clone;
    line-height: 1;
  }

  /* Merge adjacent inline code elements */
  & span:has(code) + span code {
    border-start-start-radius: 0;
    border-end-start-radius: 0;
    padding-inline-start: 0;
  }

  & span:has(code):has(+ span code) code {
    border-start-end-radius: 0;
    border-end-end-radius: 0;
    padding-inline-end: 0;
  }
}

.lb-comment-mention,
.lb-composer-mention {
  color: var(--lb-accent);
  font-weight: 500;
}

/**
 * Composer
 */

.lb-composer {
  background: var(--lb-background);
  color: var(--lb-foreground);
}

/* TODO: Improve logic, currently having an action button focused would count */
.lb-composer:not(:focus-within) .lb-button\:primary {
  /* @internal */
  --lb-button-background: var(--lb-foreground-100);

  color: var(--lb-foreground-600);

  &:enabled:hover,
  &:enabled:focus-visible {
    color: var(--lb-background);
  }
}

.lb-composer-editor {
  padding: var(--lb-spacing);
  outline: none;
}

.lb-composer-mention {
  padding: 0.2em 0.4em;
  border-radius: calc(0.75 * var(--lb-radius));
  background: var(--lb-accent-subtlest);

  &[data-selected] {
    background: var(--lb-accent-subtle);
  }
}

.lb-composer-footer {
  display: flex;
  gap: calc(0.75 * var(--lb-spacing));
  align-items: center;
  height: calc(#{$lb-button-size} + var(--lb-spacing));
  padding: 0 var(--lb-spacing) var(--lb-spacing);
}

.lb-composer-actions,
.lb-composer-editor-actions {
  display: flex;
  gap: calc(0.25 * var(--lb-spacing));
  align-items: center;
}

.lb-composer-editor-actions {
  margin-inline-end: auto;
}

.lb-composer-logo {
  height: calc(0.75 * #{$lb-button-size});
  color: var(--lb-foreground-400);
}

/**
 * Comment
 */

.lb-comment {
  /* @public */
  --lb-comment-avatar-size: #{$lb-button-size};

  position: relative;
  padding: var(--lb-spacing);
  background: var(--lb-background);
  color: var(--lb-foreground);
  font-weight: 400;
}

.lb-comment-header {
  position: relative;
  display: flex;
  gap: calc(0.75 * var(--lb-spacing));
  align-items: center;
  height: var(--lb-comment-avatar-size);
  margin-block-end: calc(0.75 * var(--lb-spacing));
}

.lb-comment-info {
  display: flex;
  gap: calc(0.75 * var(--lb-spacing));
  align-items: center;
}

.lb-comment-avatar {
  width: var(--lb-comment-avatar-size);
}

/* TODO: Find better class name */
.lb-comment-info-labels {
  display: flex;
  gap: calc(0.5 * var(--lb-spacing));
  align-items: baseline;
}

.lb-comment-user {
  overflow: hidden;
  font-weight: 500;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.lb-comment-date {
  color: var(--lb-foreground-500);
  font-size: 0.85em;
}

.lb-comment-actions {
  display: flex;
  gap: calc(0.25 * var(--lb-spacing));
  transition-timing-function: var(--lb-transition-easing);
  transition-duration: var(--lb-transition-duration);
  transition-property: opacity;
  margin-inline-start: auto;
}

.lb-comment:not(.lb-comment\:always-show-actions) {
  & .lb-comment-actions {
    opacity: 0;
  }

  &:hover .lb-comment-actions,
  &:focus-within .lb-comment-actions,
  &[data-dropdown-open] .lb-comment-actions {
    opacity: 1;
  }
}

.lb-comment-composer {
  margin: calc(-1 * var(--lb-spacing));
}

.lb-comment-body {
  /* Prevent empty lines from collapsing */
  & p span:only-child:empty::before {
    content: "\FEFF";
    user-select: none;
  }
}

.lb-comment\:indent-body {
  min-height: var(--lb-comment-avatar-size);

  & .lb-comment-header {
    height: $lb-button-size;
    margin-block-end: calc(0.5 * var(--lb-spacing));
  }

  & .lb-comment-avatar {
    position: absolute;
    top: 0;
    left: 0;
  }

  & .lb-comment-info-labels {
    margin-inline-start: calc(
      var(--lb-comment-avatar-size) + 0.75 * var(--lb-spacing)
    );
  }

  & .lb-comment-body,
  & .lb-comment-composer {
    padding-inline-start: calc(
      var(--lb-comment-avatar-size) + 0.75 * var(--lb-spacing)
    );
  }
}

/**
 * Thread
 */

.lb-thread {
  background: var(--lb-background);
  color: var(--lb-foreground);
}

.lb-thread-comments {
  display: flex;
  flex-direction: column;
}

.lb-thread:not(.lb-thread\:always-show-actions) {
  &:hover .lb-thread-actions,
  &:focus-within .lb-thread-actions {
    opacity: 1;
  }
}

.lb-thread-comment {
  padding-block: calc(0.5 * var(--lb-spacing));

  &:first-of-type {
    padding-block-start: var(--lb-spacing);
  }

  &:last-of-type {
    padding-block-end: var(--lb-spacing);
  }
}

.lb-thread-composer {
  position: relative;

  &::after {
    content: "";
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    border-block-start: 1px solid var(--lb-foreground-100);
  }
}

/**
 * Animations
 */

@keyframes lb-animation-slide\:from-top {
  from {
    opacity: 0;
    transform: translateY(-4px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes lb-animation-slide\:from-bottom {
  from {
    opacity: 0;
    transform: translateY(4px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}
